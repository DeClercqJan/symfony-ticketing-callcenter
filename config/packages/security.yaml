security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  encoders:
    App\Entity\User:
      algorithm: auto
  providers:
    users_in_memory: { memory: null }
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
  role_hierarchy:
      ROLE_ADMIN: [ROLE_TICKET_ADMIN, ROLE_TICKET_CREATE, ROLE_TICKET_VIEW, ROLE_TICKET_EDIT, ROLE_TICKET_DELETE, ROLE_COMMENT_ADMIN, ROLE_COMMENT_CREATE, ROLE_COMMENT_EDIT, ROLE_ADMIN_COMMENT, ROLE_COMMENT_DELETE]
      ROLE_AGENT_1 : []
      ROLE_CUSTOMER: [ROLE_TICKET_CREATE, ROLE_TICKET_VIEW, ROLE_COMMENT_CREATE, ROLE_COMMENT_VIEW]
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      provider: app_user_provider
      # provider: users_in_memory
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        target: app_login
      remember_me:
        secret:   '%kernel.secret%'
        lifetime: 2592000 # 30 days in seconds
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/user, roles: ROLE_ADMIN }
    - { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }

    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
